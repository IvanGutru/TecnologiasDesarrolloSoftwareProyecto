Ä
mC:\Users\irvin\Desktop\TecnologiasDesarrolloSoftwareProyecto\Servidor WCF\MessageService\FilaTablaPuntajes.cs
	namespace 	
MessageService
 
{ 
public		 

class		 
FilaTablaPuntajes		 "
{

 
public 
String 
Apodo 
{ 
get !
;! "
set# &
;& '
}( )
public 
DateTime 
Fecha 
{ 
get  #
;# $
set% (
;( )
}* +
public 
int 
Turnos 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
Puntos 
{ 
get 
;  
set! $
;$ %
}& '
} 
} ô,
pC:\Users\irvin\Desktop\TecnologiasDesarrolloSoftwareProyecto\Servidor WCF\MessageService\IAdministradorCuenta.cs
	namespace 	
MessageService
 
{ 
[		 
ServiceContract		 
]		 
public

 

	interface

  
IAdministradorCuenta

 )
{ 
[ 	
OperationContract	 
] 
Jugador 
IniciarSesion 
( 
Cuenta $
cuenta% +
)+ ,
;, -
[ 	
OperationContract	 
] 
Boolean 
RegistrarJugador  
(  !
Jugador! (
jugador) 0
,0 1
Cuenta2 8
cuenta9 ?
)? @
;@ A
[ 	
OperationContract	 
] 
Boolean  
ActivarCuentaJugador $
($ %
Cuenta% +
cuenta, 2
,2 3
String4 :
codigo; A
)A B
;B C
[ 	
OperationContract	 
] 
Boolean 
VerificarCuenta 
(  
Cuenta  &
cuenta' -
)- .
;. /
[ 	
OperationContract	 
] 
Boolean 
VerificarApodo 
( 
Jugador &
jugador' .
). /
;/ 0
[ 	
OperationContract	 
] 
Boolean 
EnviarCorreo 
( 
Cuenta #
cuenta$ *
)* +
;+ ,
[ 	
OperationContract	 
] 
List 
< 
FilaTablaPuntajes 
> $
ConsultarPuntajesPropios  8
(8 9
Jugador9 @
jugadorA H
)H I
;I J
[ 	
OperationContract	 
] 
List 
< 
FilaTablaPuntajes 
> $
ConsultarMejoresPuntajes  8
(8 9
)9 :
;: ;
} 
[ 
DataContract 
] 
public 

class 
Jugador 
{   
private!! 
String!! 
apodo!! 
;!! 
private"" 
String"" 
nombre"" 
;"" 
private## 
string## 
	apellidos##  
;##  !
[%% 	

DataMember%%	 
]%% 
public&& 
String&& 
Apodo&& 
{'' 	
get(( 
{(( 
return(( 
apodo(( 
;(( 
}((  !
set)) 
{)) 
apodo)) 
=)) 
value)) 
;))  
}))! "
}** 	
[,, 	

DataMember,,	 
],, 
public-- 
String-- 
Nombre-- 
{.. 	
get// 
{// 
return// 
nombre// 
;//  
}//! "
set00 
{00 
nombre00 
=00 
value00  
;00  !
}00" #
}11 	
[33 	

DataMember33	 
]33 
public44 
String44 
	Apellidos44 
{55 	
get66 
{66 
return66 
	apellidos66 "
;66" #
}66$ %
set77 
{77 
	apellidos77 
=77 
value77 #
;77# $
}77% &
}88 	
}99 
[;; 
DataContract;; 
];; 
public<< 

class<< 
Cuenta<< 
{== 
private>> 
String>> 
correo>> 
;>> 
private?? 
String?? 
contrase√±a?? !
;??! "
[AA 	

DataMemberAA	 
]AA 
publicBB 
StringBB 
CorreoBB 
{CC 	
getDD 
{DD 
returnDD 
correoDD 
;DD  
}DD! "
setEE 
{EE 
correoEE 
=EE 
valueEE  
;EE  !
}EE" #
}FF 	
[HH 	

DataMemberHH	 
]HH 
publicII 
StringII 
Contrase√±aII  
{JJ 	
getKK 
{KK 
returnKK 
contrase√±aKK #
;KK# $
}KK% &
setLL 
{LL 
contrase√±aLL 
=LL 
valueLL $
;LL$ %
}LL& '
}MM 	
}NN 
[PP 
DataContractPP 
]PP 
publicQQ 

classQQ 

PuntuacionQQ 
{RR 
privateSS 
intSS 
puntosSS 
;SS 
privateTT 
intTT 
turnosTT 
;TT 
[VV 	

DataMemberVV	 
]VV 
publicWW 
intWW 
PuntosWW 
{XX 	
getYY 
{YY 
returnYY 
puntosYY 
;YY  
}YY! "
setZZ 
{ZZ 
puntosZZ 
=ZZ 
valueZZ  
;ZZ  !
}ZZ" #
}[[ 	
[]] 	

DataMember]]	 
]]] 
public^^ 
int^^ 
Turnos^^ 
{__ 	
get`` 
{`` 
return`` 
turnos`` 
;``  
}``! "
setaa 
{aa 
turnosaa 
=aa 
valueaa  
;aa  !
}aa" #
}bb 	
}cc 
}ee ç(
nC:\Users\irvin\Desktop\TecnologiasDesarrolloSoftwareProyecto\Servidor WCF\MessageService\IAdministradorChat.cs
	namespace		 	
MessageService		
 
{

 
[ 
ServiceContract 
( 
CallbackContract %
=& '
typeof( .
(. /
IChatCliente/ ;
); <
)< =
]= >
	interface 
IAdministradorChat  
{ 
[ 	
OperationContract	 
] 
int 
	CrearSala 
( 
Sala 
sala 
)  
;  !
[ 	
OperationContract	 
] 
List 
< 
Sala 
> %
ConsultarSalasDisponibles ,
(, -
)- .
;. /
[ 	
OperationContract	 
] 
List 
< 
String 
> "
ConsultarJugadoresSala +
(+ ,
int, /
indice0 6
)6 7
;7 8
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true% )
)) *
]* +
void 

UnirseSala 
( 
int 
indice "
," #
Jugador$ +
jugador, 3
)3 4
;4 5
[ 	
OperationContract	 
] 
Boolean 
ValidarCupoSala 
(  
int  #
indice$ *
)* +
;+ ,
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
EnviarMensaje 
( 
int 
indice %
,% &
String' -
mensaje. 5
)5 6
;6 7
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
	SalirChat 
( 
int 
indice !
)! "
;" #
} 
[ 
ServiceContract 
] 
public 

	interface 
IChatCliente !
{   
[!! 	
OperationContract!!	 
(!! 
IsOneWay!! #
=!!$ %
true!!& *
)!!* +
]!!+ ,
void"" 
RecibirMensaje"" 
("" 
String"" "
mensaje""# *
)""* +
;""+ ,
[## 	
OperationContract##	 
(## 
IsOneWay## #
=##$ %
true##& *
)##* +
]##+ ,
void$$ !
RecibirMensajeMiembro$$ "
($$" #
Boolean$$# *
entrada$$+ 2
,$$2 3
String$$4 :
apodo$$; @
)$$@ A
;$$A B
}%% 
['' 
DataContract'' 
]'' 
public(( 

class(( 
Sala(( 
{)) 
private** 
String** 
nombre** 
;** 
private++ 
Boolean++ 
	dobleDado++ !
;++! "
private,, 
Boolean,, 

dobleFicha,, "
;,," #
private-- 
Boolean-- 
casillasEspeciales-- *
;--* +
private.. 
int.. 
numJugadores..  
;..  !
private// 

Dictionary// 
<// 
IChatCliente// '
,//' (
Jugador//) 0
>//0 1 
diccionarioJugadores//2 F
;//F G
[11 	

DataMember11	 
]11 
public22 
String22 
Nombre22 
{22 
get22 "
;22" #
set22$ '
;22' (
}22) *
[44 	

DataMember44	 
]44 
public55 
Boolean55 
	DobleDado55  
{55! "
get55# &
;55& '
set55( +
;55+ ,
}55- .
[77 	

DataMember77	 
]77 
public88 
Boolean88 

DobleFicha88 !
{88" #
get88$ '
;88' (
set88) ,
;88, -
}88. /
[:: 	

DataMember::	 
]:: 
public;; 
Boolean;; 
CasillasEspeciales;; )
{;;* +
get;;, /
;;;/ 0
set;;1 4
;;;4 5
};;6 7
[== 	

DataMember==	 
]== 
public>> 
int>> 
NumJugadores>> 
{>>  !
get>>" %
;>>% &
set>>' *
;>>* +
}>>, -
[@@ 	

DataMember@@	 
]@@ 
publicAA 

DictionaryAA 
<AA 
IChatClienteAA &
,AA& '
JugadorAA( /
>AA/ 0 
DiccionarioJugadoresAA1 E
{AAF G
getAAH K
;AAK L
setAAM P
;AAP Q
}AAR S
}BB 
}CC û
sC:\Users\irvin\Desktop\TecnologiasDesarrolloSoftwareProyecto\Servidor WCF\MessageService\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str )
)) *
]* +
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str $
)$ %
]% &
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str +
)+ ,
], -
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 7
)7 8
]8 9
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *ã˚
dC:\Users\irvin\Desktop\TecnologiasDesarrolloSoftwareProyecto\Servidor WCF\MessageService\Servicio.cs
	namespace 	
MessageService
 
{ 
public 

partial 
class 
Servicio !
:" # 
IAdministradorCuenta$ 8
{9 :
private 

ServidorSE 
conexionBaseDatos ,
;, -
private 
String 
ObtenerSalt "
(" #
)# $
{ 	
byte 
[ 
] 
salt 
= 
new 
byte "
[" #
$num# &
/' (
$num) *
]* +
;+ ,
using 
( 
var 
rng 
= !
RandomNumberGenerator 2
.2 3
Create3 9
(9 :
): ;
); <
{ 
rng 
. 
GetBytes 
( 
salt !
)! "
;" #
} 
return 
Convert 
. 
ToBase64String )
() *
salt* .
). /
;/ 0
} 	
private 
String 
ObtenerHash "
(" #
string# )
contrase√±a* 4
,4 5
string6 <
salt= A
)A B
{ 	
return 
Convert 
. 
ToBase64String )
() *
KeyDerivation* 7
.7 8
Pbkdf28 >
(> ?
password 
: 
contrase√±a $
,$ %
salt 
: 
Convert 
. 
FromBase64String .
(. /
salt/ 3
)3 4
,4 5
prf   
:   
KeyDerivationPrf   %
.  % &
HMACSHA1  & .
,  . /
iterationCount!! 
:!! 
$num!!  %
,!!% &
numBytesRequested"" !
:""! "
$num""# &
/""' (
$num"") *
)""* +
)""+ ,
;"", -
}## 	
private%% 
DAO%% 
.%% 
Cuenta%%  
ObtenerCuentaJugador%% /
(%%/ 0
String%%0 6
correo%%7 =
)%%= >
{&& 	
conexionBaseDatos'' 
='' 
new''  #

ServidorSE''$ .
(''. /
)''/ 0
;''0 1
using(( 
((( 
conexionBaseDatos(( $
)(($ %
{)) 
var** 
cuentaRecuperada** $
=**% &
conexionBaseDatos**' 8
.**8 9
	CuentaSet**9 B
.**B C
Where**C H
(**H I
c**I J
=>**K M
c**N O
.**O P
correo**P V
==**W Y
correo**Z `
)**` a
.**a b
FirstOrDefault**b p
(**p q
)**q r
;**r s
if++ 
(++ 
cuentaRecuperada++ $
!=++% '
null++( ,
)++, -
{,, 
if-- 
(-- 
cuentaRecuperada-- (
.--( )
correo--) /
.--/ 0
Equals--0 6
(--6 7
correo--7 =
)--= >
)--> ?
{.. 
return// 
cuentaRecuperada// /
;/// 0
}00 
}11 
}22 
return33 
null33 
;33 
}44 	
public66 
Boolean66 
EnviarCorreo66 #
(66# $
Cuenta66$ *
cuenta66+ 1
)661 2
{77 	
var88 
cuentaRecuperada88  
=88! " 
ObtenerCuentaJugador88# 7
(887 8
cuenta888 >
.88> ?
Correo88? E
)88E F
;88F G
if99 
(99 
cuentaRecuperada99  
==99! #
null99$ (
)99( )
{:: 
return;; 
false;; 
;;; 
}<< 
MailMessage== 
correo== 
===  
new==! $
MailMessage==% 0
(==0 1
$str==1 [
,==[ \
cuenta==] c
.==c d
Correo==d j
,==j k
$str	==l Ö
,
==Ö Ü
$str>> 9
+>>: ;
cuentaRecuperada>>< L
.>>L M
salt>>M Q
+>>R S
$str>>T ^
)>>^ _
;>>_ `
correo?? 
.?? 

IsBodyHtml?? 
=?? 
true??  $
;??$ %

SmtpClient@@ 
clienteSmtp@@ "
=@@# $
new@@% (

SmtpClient@@) 3
(@@3 4
$str@@4 D
)@@D E
;@@E F
clienteSmtpAA 
.AA 
	EnableSslAA !
=AA" #
trueAA$ (
;AA( )
clienteSmtpBB 
.BB !
UseDefaultCredentialsBB -
=BB. /
falseBB0 5
;BB5 6
clienteSmtpCC 
.CC 
PortCC 
=CC 
$numCC "
;CC" #
clienteSmtpDD 
.DD 
CredentialsDD #
=DD$ %
newDD& )
SystemDD* 0
.DD0 1
NetDD1 4
.DD4 5
NetworkCredentialDD5 F
(DDF G
$strDDG q
,DDq r
$str	DDs Å
)
DDÅ Ç
;
DDÇ É
tryEE 
{FF 
clienteSmtpGG 
.GG 
SendGG  
(GG  !
correoGG! '
)GG' (
;GG( )
}HH 
catchII 
(II 
	ExceptionII 
eII 
)II 
{JJ 
ConsoleKK 
.KK 
	WriteLineKK !
(KK! "
eKK" #
)KK# $
;KK$ %
}LL 
clienteSmtpMM 
.MM 
DisposeMM 
(MM  
)MM  !
;MM! "
returnNN 
trueNN 
;NN 
}OO 	
publicQQ 
JugadorQQ 
IniciarSesionQQ $
(QQ$ %
CuentaQQ% +
cuentaQQ, 2
)QQ2 3
{RR 	
conexionBaseDatosSS 
=SS 
newSS  #

ServidorSESS$ .
(SS. /
)SS/ 0
;SS0 1
usingTT 
(TT 
conexionBaseDatosTT $
)TT$ %
{UU 
varVV 
cuentaRecuperadaVV $
=VV% &
conexionBaseDatosVV' 8
.VV8 9
	CuentaSetVV9 B
.VVB C
WhereVVC H
(VVH I
cVVI J
=>VVK M
cVVN O
.VVO P
correoVVP V
==VVW Y
cuentaVVZ `
.VV` a
CorreoVVa g
)VVg h
.VVh i
FirstOrDefaultVVi w
(VVw x
)VVx y
;VVy z
ifWW 
(WW 
cuentaRecuperadaWW $
!=WW% '
nullWW( ,
&&WW- /
cuentaRecuperadaWW0 @
.WW@ A
correoWWA G
.WWG H
EqualsWWH N
(WWN O
cuentaWWO U
.WWU V
CorreoWWV \
)WW\ ]
)WW] ^
{XX 
StringYY 
contrese√±aHasheadaYY -
=YY. /
ObtenerHashYY0 ;
(YY; <
cuentaYY< B
.YYB C
Contrase√±aYYC M
,YYM N
cuentaRecuperadaYYO _
.YY_ `
saltYY` d
)YYd e
;YYe f
ifZZ 
(ZZ 
contrese√±aHasheadaZZ *
.ZZ* +
EqualsZZ+ 1
(ZZ1 2
cuentaRecuperadaZZ2 B
.ZZB C
passwordZZC K
)ZZK L
)ZZL M
{[[ 
return\\ 
new\\ "
Jugador\\# *
(\\* +
)\\+ ,
{\\- .
Apodo\\/ 4
=\\5 6
cuentaRecuperada\\7 G
.\\G H
Jugador\\H O
.\\O P
apodo\\P U
}\\V W
;\\W X
}]] 
}^^ 
}`` 
returnaa 
nullaa 
;aa 
}bb 	
publicdd 
Booleandd 
VerificarCuentadd &
(dd& '
Cuentadd' -
cuentadd. 4
)dd4 5
{ee 	
varff 
cuentaRecuperadaff  
=ff! " 
ObtenerCuentaJugadorff# 7
(ff7 8
cuentaff8 >
.ff> ?
Correoff? E
)ffE F
;ffF G
ifgg 
(gg 
cuentaRecuperadagg  
!=gg! #
nullgg$ (
&&gg) +
cuentaRecuperadagg, <
.gg< =
validadagg= E
)ggE F
{hh 
returnii 
trueii 
;ii 
}jj 
returnkk 
falsekk 
;kk 
}ll 	
publicnn 
Booleannn 
VerificarApodonn %
(nn% &
Jugadornn& -
jugadornn. 5
)nn5 6
{oo 	
conexionBaseDatospp 
=pp 
newpp  #

ServidorSEpp$ .
(pp. /
)pp/ 0
;pp0 1
usingqq 
(qq 
conexionBaseDatosqq $
)qq$ %
{rr 
varss 
jugadorRecuperadoss %
=ss& '
conexionBaseDatosss( 9
.ss9 :

JugadorSetss: D
.ssD E
WheressE J
(ssJ K
jssK L
=>ssM O
jssP Q
.ssQ R
apodossR W
==ssX Z
jugadorss[ b
.ssb c
Apodossc h
)ssh i
.ssi j
FirstOrDefaultssj x
(ssx y
)ssy z
;ssz {
iftt 
(tt 
jugadorRecuperadott %
!=tt& (
nulltt) -
)tt- .
{uu 
ifvv 
(vv 
jugadorRecuperadovv )
.vv) *
apodovv* /
.vv/ 0
Equalsvv0 6
(vv6 7
jugadorvv7 >
.vv> ?
Apodovv? D
)vvD E
)vvE F
{ww 
returnxx 
falsexx $
;xx$ %
}yy 
}zz 
return{{ 
true{{ 
;{{ 
}|| 
}}} 	
public 
Boolean 
RegistrarJugador '
(' (
Jugador( /
jugador0 7
,7 8
Cuenta9 ?
cuenta@ F
)F G
{
ÄÄ 	
var
ÅÅ 
cuentaExistente
ÅÅ 
=
ÅÅ  !"
ObtenerCuentaJugador
ÅÅ" 6
(
ÅÅ6 7
cuenta
ÅÅ7 =
.
ÅÅ= >
Correo
ÅÅ> D
)
ÅÅD E
;
ÅÅE F
if
ÇÇ 
(
ÇÇ 
cuentaExistente
ÇÇ 
!=
ÇÇ  "
null
ÇÇ# '
)
ÇÇ' (
{
ÉÉ 
return
ÑÑ 
false
ÑÑ 
;
ÑÑ 
}
ÖÖ 
String
ÜÜ 
	nuevoSalt
ÜÜ 
;
ÜÜ 
conexionBaseDatos
áá 
=
áá 
new
áá  #

ServidorSE
áá$ .
(
áá. /
)
áá/ 0
;
áá0 1
using
àà 
(
àà 
conexionBaseDatos
àà $
)
àà$ %
{
ââ 
DAO
ää 
.
ää 
Jugador
ää 
nuevoJugador
ää (
=
ää) *
new
ää+ .
DAO
ää/ 2
.
ää2 3
Jugador
ää3 :
(
ää: ;
)
ää; <
{
ää= >
apodo
ää? D
=
ääE F
jugador
ääG N
.
ääN O
Apodo
ääO T
,
ääT U
nombre
ääV \
=
ää] ^
jugador
ää_ f
.
ääf g
Nombre
ääg m
,
ääm n
	apellidos
ääo x
=
ääy z
jugadorää{ Ç
.ääÇ É
	ApellidosääÉ å
}ääç é
;ääé è
	nuevoSalt
ãã 
=
ãã 
ObtenerSalt
ãã '
(
ãã' (
)
ãã( )
;
ãã) *
conexionBaseDatos
åå !
.
åå! "
	CuentaSet
åå" +
.
åå+ ,
Add
åå, /
(
åå/ 0
new
åå0 3
DAO
åå4 7
.
åå7 8
Cuenta
åå8 >
(
åå> ?
)
åå? @
{
çç 
correo
éé 
=
éé 
cuenta
éé #
.
éé# $
Correo
éé$ *
,
éé* +
password
èè 
=
èè 
ObtenerHash
èè *
(
èè* +
cuenta
èè+ 1
.
èè1 2
Contrase√±a
èè2 <
,
èè< =
	nuevoSalt
èè> G
)
èèG H
,
èèH I
salt
êê 
=
êê 
	nuevoSalt
êê $
,
êê$ %
validada
ëë 
=
ëë 
false
ëë $
,
ëë$ %
Jugador
íí 
=
íí 
nuevoJugador
íí *
,
íí* +
}
ìì 
)
ìì 
;
ìì 
try
îî 
{
ïï 
conexionBaseDatos
ññ %
.
ññ% &
SaveChanges
ññ& 1
(
ññ1 2
)
ññ2 3
;
ññ3 4
}
óó 
catch
òò 
(
òò 
	Exception
òò  
e
òò! "
)
òò" #
{
ôô 
Console
öö 
.
öö 
	WriteLine
öö %
(
öö% &
e
öö& '
)
öö' (
;
öö( )
}
õõ 
}
úú 
return
ùù 
true
ùù 
;
ùù 
}
ûû 	
public
†† 
bool
†† "
ActivarCuentaJugador
†† (
(
††( )
Cuenta
††) /
cuenta
††0 6
,
††6 7
String
††8 >
codigo
††? E
)
††E F
{
°° 	
var
¢¢ 
cuentaRecuperada
¢¢  
=
¢¢! ""
ObtenerCuentaJugador
¢¢# 7
(
¢¢7 8
cuenta
¢¢8 >
.
¢¢> ?
Correo
¢¢? E
)
¢¢E F
;
¢¢F G
if
££ 
(
££ 
cuentaRecuperada
££  
!=
££! #
null
££$ (
&&
££) +
cuentaRecuperada
££, <
.
££< =
salt
££= A
.
££A B
Equals
££B H
(
££H I
codigo
££I O
)
££O P
)
££P Q
{
§§ 
conexionBaseDatos
•• !
=
••" #
new
••$ '

ServidorSE
••( 2
(
••2 3
)
••3 4
;
••4 5
using
¶¶ 
(
¶¶ 
conexionBaseDatos
¶¶ (
)
¶¶( )
{
ßß 
cuentaRecuperada
®® $
.
®®$ %
validada
®®% -
=
®®. /
true
®®0 4
;
®®4 5
conexionBaseDatos
©© %
.
©©% &
Entry
©©& +
(
©©+ ,
cuentaRecuperada
©©, <
)
©©< =
.
©©= >
State
©©> C
=
©©D E
System
©©F L
.
©©L M
Data
©©M Q
.
©©Q R
Entity
©©R X
.
©©X Y
EntityState
©©Y d
.
©©d e
Modified
©©e m
;
©©m n
conexionBaseDatos
™™ %
.
™™% &
SaveChanges
™™& 1
(
™™1 2
)
™™2 3
;
™™3 4
	Consultar
™™5 >
(
™™> ?
)
™™? @
;
™™@ A
}
´´ 
return
¨¨ 
true
¨¨ 
;
¨¨ 
}
≠≠ 
return
ÆÆ 
false
ÆÆ 
;
ÆÆ 
}
ØØ 	
public
±± 
List
±± 
<
±± 
FilaTablaPuntajes
±± %
>
±±% &&
ConsultarPuntajesPropios
±±' ?
(
±±? @
Jugador
±±@ G
jugador
±±H O
)
±±O P
{
≤≤ 	
List
≥≥ 
<
≥≥ 
FilaTablaPuntajes
≥≥ "
>
≥≥" #

ListaFilas
≥≥$ .
=
≥≥/ 0
new
≥≥1 4
List
≥≥5 9
<
≥≥9 :
FilaTablaPuntajes
≥≥: K
>
≥≥K L
(
≥≥L M
)
≥≥M N
;
≥≥N O
conexionBaseDatos
¥¥ 
=
¥¥ 
new
¥¥  #

ServidorSE
¥¥$ .
(
¥¥. /
)
¥¥/ 0
;
¥¥0 1
using
µµ 
(
µµ 
conexionBaseDatos
µµ $
)
µµ$ %
{
∂∂ 
var
∑∑ 
listaPuntajes
∑∑ !
=
∑∑" #
conexionBaseDatos
∑∑$ 5
.
∑∑5 6
PuntuacionSet
∑∑6 C
.
∑∑C D
Where
∑∑D I
(
∑∑I J
p
∑∑J K
=>
∑∑L N
p
∑∑O P
.
∑∑P Q
Jugador
∑∑Q X
.
∑∑X Y
apodo
∑∑Y ^
==
∑∑_ a
jugador
∑∑b i
.
∑∑i j
Apodo
∑∑j o
)
∑∑o p
.
∑∑p q
ToList
∑∑q w
(
∑∑w x
)
∑∑x y
;
∑∑y z
foreach
∏∏ 
(
∏∏ 
var
∏∏ 
puntaje
∏∏ $
in
∏∏% '
listaPuntajes
∏∏( 5
)
∏∏5 6
{
ππ 

ListaFilas
∫∫ 
.
∫∫ 
Add
∫∫ "
(
∫∫" #
new
∫∫# &
FilaTablaPuntajes
∫∫' 8
(
∫∫8 9
)
∫∫9 :
{
∫∫: ;
Apodo
ªª 
=
ªª 
puntaje
ªª  '
.
ªª' (
Jugador
ªª( /
.
ªª/ 0
apodo
ªª0 5
,
ªª5 6
Fecha
ºº 
=
ºº 
puntaje
ºº  '
.
ºº' (
Partida
ºº( /
.
ºº/ 0

tiempo_fin
ºº0 :
,
ºº: ;
Turnos
ΩΩ 
=
ΩΩ  
puntaje
ΩΩ! (
.
ΩΩ( )
turnos
ΩΩ) /
,
ΩΩ/ 0
Puntos
ææ 
=
ææ  
puntaje
ææ! (
.
ææ( )
puntos
ææ) /
}
øø 
)
øø 
;
øø 
}
¿¿ 
}
¡¡ 
return
¬¬ 

ListaFilas
¬¬ 
;
¬¬ 
}
√√ 	
public
≈≈ 
List
≈≈ 
<
≈≈ 
FilaTablaPuntajes
≈≈ %
>
≈≈% &&
ConsultarMejoresPuntajes
≈≈' ?
(
≈≈? @
)
≈≈@ A
{
∆∆ 	
List
«« 
<
«« 
FilaTablaPuntajes
«« "
>
««" #

ListaFilas
««$ .
=
««/ 0
new
««1 4
List
««5 9
<
««9 :
FilaTablaPuntajes
««: K
>
««K L
(
««L M
)
««M N
;
««N O
conexionBaseDatos
»» 
=
»» 
new
»»  #

ServidorSE
»»$ .
(
»». /
)
»»/ 0
;
»»0 1
using
…… 
(
…… 
conexionBaseDatos
…… $
)
……$ %
{
   
var
ÀÀ 
listaPuntajes
ÀÀ !
=
ÀÀ" #
conexionBaseDatos
ÀÀ$ 5
.
ÀÀ5 6
PuntuacionSet
ÀÀ6 C
.
ÀÀC D
OrderByDescending
ÀÀD U
(
ÀÀU V
p
ÀÀV W
=>
ÀÀX Z
p
ÀÀ[ \
.
ÀÀ\ ]
puntos
ÀÀ] c
)
ÀÀc d
.
ÀÀd e
Take
ÀÀe i
(
ÀÀi j
$num
ÀÀj l
)
ÀÀl m
.
ÀÀm n
ToList
ÀÀn t
(
ÀÀt u
)
ÀÀu v
;
ÀÀv w
foreach
ÃÃ 
(
ÃÃ 
var
ÃÃ 
puntaje
ÃÃ $
in
ÃÃ% '
listaPuntajes
ÃÃ( 5
)
ÃÃ5 6
{
ÕÕ 

ListaFilas
ŒŒ 
.
ŒŒ 
Add
ŒŒ "
(
ŒŒ" #
new
ŒŒ# &
FilaTablaPuntajes
ŒŒ' 8
(
ŒŒ8 9
)
ŒŒ9 :
{
œœ 
Apodo
–– 
=
–– 
puntaje
––  '
.
––' (
Jugador
––( /
.
––/ 0
apodo
––0 5
,
––5 6
Fecha
—— 
=
—— 
puntaje
——  '
.
——' (
Partida
——( /
.
——/ 0

tiempo_fin
——0 :
,
——: ;
Turnos
““ 
=
““  
puntaje
““! (
.
““( )
turnos
““) /
,
““/ 0
Puntos
”” 
=
””  
puntaje
””! (
.
””( )
puntos
””) /
}
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 
}
÷÷ 
return
◊◊ 

ListaFilas
◊◊ 
;
◊◊ 
}
ÿÿ 	
public
⁄⁄ 
void
⁄⁄ 
	Consultar
⁄⁄ 
(
⁄⁄ 
)
⁄⁄ 
{
€€ 	
conexionBaseDatos
‹‹ 
=
‹‹ 
new
‹‹  #

ServidorSE
‹‹$ .
(
‹‹. /
)
‹‹/ 0
;
‹‹0 1
using
›› 
(
›› 
conexionBaseDatos
›› $
)
››$ %
{
ﬁﬁ 
var
ﬂﬂ 
lista
ﬂﬂ 
=
ﬂﬂ 
conexionBaseDatos
ﬂﬂ -
.
ﬂﬂ- .

JugadorSet
ﬂﬂ. 8
.
ﬂﬂ8 9
ToList
ﬂﬂ9 ?
(
ﬂﬂ? @
)
ﬂﬂ@ A
;
ﬂﬂA B
var
‡‡ 
lista2
‡‡ 
=
‡‡ 
conexionBaseDatos
‡‡ .
.
‡‡. /
	CuentaSet
‡‡/ 8
.
‡‡8 9
ToList
‡‡9 ?
(
‡‡? @
)
‡‡@ A
;
‡‡A B
foreach
·· 
(
·· 
var
·· 
item
·· !
in
··" $
lista
··% *
)
··* +
{
‚‚ 
Console
„„ 
.
„„ 
	WriteLine
„„ %
(
„„% &
item
„„& *
.
„„* +
Id
„„+ -
+
„„. /
item
„„0 4
.
„„4 5
apodo
„„5 :
+
„„; <
item
„„= A
.
„„A B
Cuenta
„„B H
.
„„H I
correo
„„I O
)
„„O P
;
„„P Q
}
‰‰ 
foreach
ÂÂ 
(
ÂÂ 
var
ÂÂ 
item
ÂÂ !
in
ÂÂ" $
lista2
ÂÂ% +
)
ÂÂ+ ,
{
ÊÊ 
Console
ÁÁ 
.
ÁÁ 
	WriteLine
ÁÁ %
(
ÁÁ% &
item
ÁÁ& *
.
ÁÁ* +
Id
ÁÁ+ -
+
ÁÁ. /
item
ÁÁ0 4
.
ÁÁ4 5
correo
ÁÁ5 ;
+
ÁÁ< =
item
ÁÁ> B
.
ÁÁB C
password
ÁÁC K
+
ÁÁL M
item
ÁÁN R
.
ÁÁR S
validada
ÁÁS [
)
ÁÁ[ \
;
ÁÁ\ ]
}
ËË 
}
ÈÈ 
}
ÍÍ 	
}
ÏÏ 
[
ÓÓ 
ServiceBehavior
ÓÓ 
(
ÓÓ 
ConcurrencyMode
ÓÓ $
=
ÓÓ% &
ConcurrencyMode
ÓÓ' 6
.
ÓÓ6 7
Single
ÓÓ7 =
,
ÓÓ= >!
InstanceContextMode
ÓÓ? R
=
ÓÓS T!
InstanceContextMode
ÓÓU h
.
ÓÓh i
Single
ÓÓi o
)
ÓÓo p
]
ÓÓp q
public
ÔÔ 

partial
ÔÔ 
class
ÔÔ 
Servicio
ÔÔ !
:
ÔÔ" # 
IAdministradorChat
ÔÔ$ 6
{
 
List
ÒÒ 
<
ÒÒ 
Sala
ÒÒ 
>
ÒÒ 
salasAbiertas
ÒÒ  
=
ÒÒ! "
new
ÒÒ# &
List
ÒÒ' +
<
ÒÒ+ ,
Sala
ÒÒ, 0
>
ÒÒ0 1
(
ÒÒ1 2
)
ÒÒ2 3
;
ÒÒ3 4
public
ÛÛ 
int
ÛÛ 
	CrearSala
ÛÛ 
(
ÛÛ 
Sala
ÛÛ !
sala
ÛÛ" &
)
ÛÛ& '
{
ÙÙ 	
sala
ıı 
.
ıı "
DiccionarioJugadores
ıı %
=
ıı& '
new
ıı( +

Dictionary
ıı, 6
<
ıı6 7
IChatCliente
ıı7 C
,
ııC D
Jugador
ııE L
>
ııL M
(
ııM N
)
ııN O
;
ııO P
salasAbiertas
ˆˆ 
.
ˆˆ 
Add
ˆˆ 
(
ˆˆ 
sala
ˆˆ "
)
ˆˆ" #
;
ˆˆ# $
return
˜˜ 
salasAbiertas
˜˜  
.
˜˜  !
IndexOf
˜˜! (
(
˜˜( )
sala
˜˜) -
)
˜˜- .
;
˜˜. /
}
¯¯ 	
public
˙˙ 
List
˙˙ 
<
˙˙ 
String
˙˙ 
>
˙˙ $
ConsultarJugadoresSala
˙˙ 2
(
˙˙2 3
int
˙˙3 6
indice
˙˙7 =
)
˙˙= >
{
˚˚ 	
List
¸¸ 
<
¸¸ 
String
¸¸ 
>
¸¸ 
listaApodos
¸¸ $
=
¸¸% &
new
¸¸' *
List
¸¸+ /
<
¸¸/ 0
String
¸¸0 6
>
¸¸6 7
(
¸¸7 8
)
¸¸8 9
;
¸¸9 :
foreach
˝˝ 
(
˝˝ 
var
˝˝ 
miembro
˝˝  
in
˝˝! #
salasAbiertas
˝˝$ 1
[
˝˝1 2
indice
˝˝2 8
]
˝˝8 9
.
˝˝9 :"
DiccionarioJugadores
˝˝: N
)
˝˝N O
{
˛˛ 
listaApodos
ˇˇ 
.
ˇˇ 
Add
ˇˇ 
(
ˇˇ  
miembro
ˇˇ  '
.
ˇˇ' (
Value
ˇˇ( -
.
ˇˇ- .
Apodo
ˇˇ. 3
)
ˇˇ3 4
;
ˇˇ4 5
}
ÄÄ 
return
ÅÅ 
listaApodos
ÅÅ 
;
ÅÅ 
}
ÇÇ 	
public
ÑÑ 
void
ÑÑ 

UnirseSala
ÑÑ 
(
ÑÑ 
int
ÑÑ "
indice
ÑÑ# )
,
ÑÑ) *
Jugador
ÑÑ+ 2
jugador
ÑÑ3 :
)
ÑÑ: ;
{
ÖÖ 	
var
ÜÜ 
conexion
ÜÜ 
=
ÜÜ 
OperationContext
ÜÜ +
.
ÜÜ+ ,
Current
ÜÜ, 3
.
ÜÜ3 4 
GetCallbackChannel
ÜÜ4 F
<
ÜÜF G
IChatCliente
ÜÜG S
>
ÜÜS T
(
ÜÜT U
)
ÜÜU V
;
ÜÜV W
salasAbiertas
áá 
[
áá 
indice
áá  
]
áá  !
.
áá! ""
DiccionarioJugadores
áá" 6
[
áá6 7
conexion
áá7 ?
]
áá? @
=
ááA B
jugador
ááC J
;
ááJ K
salasAbiertas
àà 
[
àà 
indice
àà  
]
àà  !
.
àà! "
NumJugadores
àà" .
++
àà/ 1
;
àà1 2
foreach
ââ 
(
ââ 
var
ââ 
miembro
ââ  
in
ââ! #
salasAbiertas
ââ$ 1
[
ââ1 2
indice
ââ2 8
]
ââ8 9
.
ââ9 :"
DiccionarioJugadores
ââ: N
.
ââN O
Keys
ââO S
)
ââS T
{
ää 
miembro
ãã 
.
ãã #
RecibirMensajeMiembro
ãã -
(
ãã- .
true
ãã. 2
,
ãã2 3
jugador
ãã4 ;
.
ãã; <
Apodo
ãã< A
)
ããA B
;
ããB C
}
åå 
}
çç 	
public
èè 
Boolean
èè 
ValidarCupoSala
èè &
(
èè& '
int
èè' *
indice
èè+ 1
)
èè1 2
{
êê 	
if
ëë 
(
ëë 
salasAbiertas
ëë 
[
ëë 
indice
ëë $
]
ëë$ %
.
ëë% &
NumJugadores
ëë& 2
>=
ëë3 5
$num
ëë6 7
)
ëë7 8
{
íí 
return
ìì 
false
ìì 
;
ìì 
}
îî 
return
ïï 
true
ïï 
;
ïï 
}
ññ 	
public
òò 
List
òò 
<
òò 
Sala
òò 
>
òò '
ConsultarSalasDisponibles
òò 3
(
òò3 4
)
òò4 5
{
ôô 	
List
öö 
<
öö 
Sala
öö 
>
öö 
salasDisponibles
öö '
=
öö( )
new
öö* -
List
öö. 2
<
öö2 3
Sala
öö3 7
>
öö7 8
(
öö8 9
)
öö9 :
;
öö: ;
foreach
õõ 
(
õõ 
var
õõ 
sala
õõ 
in
õõ  
salasAbiertas
õõ! .
)
õõ. /
{
úú 
if
ùù 
(
ùù 
sala
ùù 
.
ùù 
NumJugadores
ùù %
<=
ùù& (
$num
ùù) *
)
ùù* +
{
ûû 
salasDisponibles
üü $
.
üü$ %
Add
üü% (
(
üü( )
new
üü) ,
Sala
üü- 1
(
üü1 2
)
üü2 3
{
†† 
Nombre
°° 
=
°°  
sala
°°! %
.
°°% &
Nombre
°°& ,
,
°°, -
	DobleDado
¢¢ !
=
¢¢" #
sala
¢¢$ (
.
¢¢( )
	DobleDado
¢¢) 2
,
¢¢2 3

DobleFicha
££ "
=
££# $
sala
££% )
.
££) *

DobleFicha
££* 4
,
££4 5 
CasillasEspeciales
§§ *
=
§§+ ,
sala
§§- 1
.
§§1 2 
CasillasEspeciales
§§2 D
,
§§D E
NumJugadores
•• $
=
••% &
sala
••' +
.
••+ ,
NumJugadores
••, 8
}
¶¶ 
)
¶¶ 
;
¶¶ 
}
ßß 
}
®® 
return
©© 
salasDisponibles
©© #
;
©©# $
}
™™ 	
public
¨¨ 
void
¨¨ 
EnviarMensaje
¨¨ !
(
¨¨! "
int
¨¨" %
indice
¨¨& ,
,
¨¨, -
string
¨¨. 4
mensaje
¨¨5 <
)
¨¨< =
{
≠≠ 	
var
ÆÆ 
conexion
ÆÆ 
=
ÆÆ 
OperationContext
ÆÆ +
.
ÆÆ+ ,
Current
ÆÆ, 3
.
ÆÆ3 4 
GetCallbackChannel
ÆÆ4 F
<
ÆÆF G
IChatCliente
ÆÆG S
>
ÆÆS T
(
ÆÆT U
)
ÆÆU V
;
ÆÆV W
Jugador
ØØ 
jugador
ØØ 
;
ØØ 
if
∞∞ 
(
∞∞ 
!
∞∞ 
salasAbiertas
∞∞ 
[
∞∞ 
indice
∞∞ $
]
∞∞$ %
.
∞∞% &"
DiccionarioJugadores
∞∞& :
.
∞∞: ;
TryGetValue
∞∞; F
(
∞∞F G
conexion
∞∞G O
,
∞∞O P
out
∞∞Q T
jugador
∞∞U \
)
∞∞\ ]
)
∞∞] ^
{
±± 
return
≤≤ 
;
≤≤ 
}
≥≥ 
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
miembro
¥¥  
in
¥¥! #
salasAbiertas
¥¥$ 1
[
¥¥1 2
indice
¥¥2 8
]
¥¥8 9
.
¥¥9 :"
DiccionarioJugadores
¥¥: N
.
¥¥N O
Keys
¥¥O S
)
¥¥S T
{
µµ 
miembro
∂∂ 
.
∂∂ 
RecibirMensaje
∂∂ &
(
∂∂& '
jugador
∂∂' .
.
∂∂. /
Apodo
∂∂/ 4
+
∂∂5 6
$str
∂∂7 ;
+
∂∂< =
mensaje
∂∂> E
)
∂∂E F
;
∂∂F G
}
∑∑ 
}
∏∏ 	
public
∫∫ 
void
∫∫ 
	SalirChat
∫∫ 
(
∫∫ 
int
∫∫ !
indice
∫∫" (
)
∫∫( )
{
ªª 	
var
ºº 
conexion
ºº 
=
ºº 
OperationContext
ºº +
.
ºº+ ,
Current
ºº, 3
.
ºº3 4 
GetCallbackChannel
ºº4 F
<
ººF G
IChatCliente
ººG S
>
ººS T
(
ººT U
)
ººU V
;
ººV W
Jugador
ΩΩ 
jugador
ΩΩ 
;
ΩΩ 
if
ææ 
(
ææ 
!
ææ 
salasAbiertas
ææ 
[
ææ 
indice
ææ %
]
ææ% &
.
ææ& '"
DiccionarioJugadores
ææ' ;
.
ææ; <
TryGetValue
ææ< G
(
ææG H
conexion
ææH P
,
ææP Q
out
ææR U
jugador
ææV ]
)
ææ] ^
)
ææ^ _
{
øø 
return
¿¿ 
;
¿¿ 
}
¡¡ 
salasAbiertas
¬¬ 
[
¬¬ 
indice
¬¬  
]
¬¬  !
.
¬¬! ""
DiccionarioJugadores
¬¬" 6
.
¬¬6 7
Remove
¬¬7 =
(
¬¬= >
conexion
¬¬> F
)
¬¬F G
;
¬¬G H
salasAbiertas
√√ 
[
√√ 
indice
√√  
]
√√  !
.
√√! "
NumJugadores
√√" .
--
√√/ 1
;
√√1 2
foreach
ƒƒ 
(
ƒƒ 
var
ƒƒ 
miembro
ƒƒ  
in
ƒƒ! #
salasAbiertas
ƒƒ$ 1
[
ƒƒ1 2
indice
ƒƒ2 8
]
ƒƒ8 9
.
ƒƒ9 :"
DiccionarioJugadores
ƒƒ: N
.
ƒƒN O
Keys
ƒƒO S
)
ƒƒS T
{
≈≈ 
miembro
∆∆ 
.
∆∆ #
RecibirMensajeMiembro
∆∆ -
(
∆∆- .
false
∆∆. 3
,
∆∆3 4
jugador
∆∆5 <
.
∆∆< =
Apodo
∆∆= B
)
∆∆B C
;
∆∆C D
}
«« 
if
»» 
(
»» 
salasAbiertas
»» 
[
»» 
indice
»» $
]
»»$ %
.
»»% &
NumJugadores
»»& 2
==
»»3 5
$num
»»6 7
)
»»7 8
{
…… 
salasAbiertas
   
.
   
RemoveAt
   &
(
  & '
indice
  ' -
)
  - .
;
  . /
}
ÀÀ 
}
ÃÃ 	
}
ŒŒ 
}–– 